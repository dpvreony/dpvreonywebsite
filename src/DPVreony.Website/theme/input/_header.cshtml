@{ string backgroundImage = null;
                if (Document.ContainsKey(WebKeys.Image))
                {
                    backgroundImage = $"background-image: url(\"{Context.GetLink(Document.GetString(WebKeys.Image))}\")";
                }
                string description = Document.WithoutSettings().GetString("Lead") ?? Document.WithoutSettings().GetString(WebKeys.Description); }
<header class="header">
    <div class="headerinner">
        <div class="floatcontainer">
            <div class="sitetitle">
                <h1>
                    <span class="headerInitialD">d</span><span class="headerInitialP">p</span><span class="headerInitialV">v</span><span>reony</span>
                </h1>
            </div>
        </div>
    </div>
    <nav class="navbar navbar-expand-md navbar-dark bg-dark">
        <button class="navbar-toggler" aria-expanded="false" aria-controls="navbarsExampleDefault" aria-label="Toggle navigation" type="button" data-target="#navbarsExampleDefault" data-toggle="collapse">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarsExampleDefault">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item active">
                    <a class="nav-link" href="/">Home<!--<span class="sr-only">(current)</span>--></a>
                </li>
                <li class="nav-item active">
                    <a class="nav-link" href="/resume/">Résumé</a>
                </li>
                <li class="nav-item active">
                    <a class="nav-link" href="/opensource/">Open Source</a>
                </li>
                <li class="nav-item active">
                    <a class="nav-link" href="/articles/">Articles</a>
                </li>
                @*<li class="nav-item">
            <a class="nav-link" href="#">Link</a>
        </li>*@
                @*<li class="nav-item">
            <a class="nav-link disabled" href="#">Disabled</a>
        </li>*@
                @*<li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" id="dropdown01" aria-expanded="false" aria-haspopup="true" href="https://example.com" data-toggle="dropdown">Dropdown</a>
            <div class="dropdown-menu" aria-labelledby="dropdown01">
                <a class="dropdown-item" href="#">Action</a>
                <a class="dropdown-item" href="#">Another action</a>
                <a class="dropdown-item" href="#">Something else here</a>
            </div>
        </li>*@
            </ul>
            @*<form class="form-inline my-2 my-lg-0">
                    <input class="form-control mr-sm-2" aria-label="Search" type="text" placeholder="Search">
                    <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
                </form>*@
        </div>
    </nav>
</header>

@*<header class="masthead" style="@backgroundImage">
    <div class="overlay"></div>
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="@(Document.GetBool("IsPost") ? "post-heading" : "site-heading")">
                    <h1>
                        @Document.GetString("Title")
                        @if (Document.GetInt(Keys.Index) > 1)
                        {
            <small>(Page @Document.GetString(Keys.Index))</small>            }
                    </h1>
                    @if (!string.IsNullOrEmpty(description))
                    {
        <h2 class="subheading">@description</h2>}
                    @if (Document.GetBool("IsPost"))
                    {
                        // This is a blog post so show extra data
        <div class="meta">Published on @Document.GetDateTime(WebKeys.Published).ToLongDateString()</div>
                        @if (Document.ContainsKey("Tags"))
                        {
        <div class="mt-3">
            @foreach (IDocument tag in Document.GetList<string>("Tags")
             .Select(x => Outputs["tags.html"].First().GetChildren().FirstOrDefault(y => y.GetTitle().Equals(x, StringComparison.OrdinalIgnoreCase)))
             .Where(x => x != null))
            {
<a href="@Context.GetLink(tag)" class="badge badge-light"> @tag.GetTitle()</a>}
        </div>}}
                </div>
            </div>
        </div>
    </div>
</header>*@
