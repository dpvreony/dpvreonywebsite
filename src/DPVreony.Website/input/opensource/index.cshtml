layout: _layout_fullwidth
---
@using DPVreony.Website.Features.OpenSource
@{
    var partialViewName = "_opensource_item";

    var designingApmInSplatArticle = new InvolvementModel(
"Article: Designing APM in Splat",
"Details on the design reasoning and motivations behind adding Application Performance Monitoring capabilities into Splat.",
null,
null);

    var designingNucleotideArticle = new InvolvementModel(
        "Article: Designing Nucleotide",
        "Details on the objectives, motivation and design reasoning on producing Nucleotide for Source Code Generation.",
        null,
        null);

    var designingVetuviemArticle = new InvolvementModel(
        "Article: Designing Vetuviem",
        "Information of the Source Code Generation project aimed at giving options for re-usuable View to ViewModel binding logic in ReactiveUI.",
        null,
        null);

    var usingStatiqAndMermaidArticle = new InvolvementModel(
        "Article: Using Statiq and Mermaid Diagrams",
        "Details on how to set up a build pipeline to utilize Mermaid Diagrams inside a Statiq website.",
        null,
        null);

    var nucleotideProject = new InvolvementModel(
        "Nucleotide",
        "A code generation toolkit aimed at reducing the amount of time developers spend involved in boiler plate code by generating the code from DSL models. This allows developers to spend their time on more useful contributions.",
        GetDPVreonyOrgGithubProject("nucleotide"),
        null);

    var whipstaffProject = new InvolvementModel(
        "Whipstaff",
        "Whipstaff is a collection of utilities to reduce overhead on developing .NET solutions. It's acts as a middleware glue for combining other packages and frameworks. Some ideas incubate in here until they are fed back into the original project they relate to.",
        GetDPVreonyOrgGithubProject("whipstaff"),
        null);

    var reactiveUiProject = new InvolvementModel(
        "ReactiveUI",
        "ReactiveUI is an MVVM framework for .NET powered by Reactive Extensions.",
        GetReactiveUiOrgGithubProject("reactiveui"),
        null);

    var splatProject = new InvolvementModel(
        "Splat",
        "Splat is a helper library for assisting in cross platform UI development on .NET that sits underneath ReactiveUI.",
        GetReactiveUiOrgGithubProject("splat"),
        null);

    var vetuviemProject = new InvolvementModel(
        "Vetuviem",
        "Vetuviem is an extension for ReactiveUI to aid in producing re-usable View to ViewModel binding logic. It generates source code around control libraries to provide a DSL model that can be combined with helper methods to allow teams to have a standard codebase of common binding behaviors.",
        GetDPVreonyOrgGithubProject("vetuviem"),
        null);

    var gripeWithRoslynProject = new InvolvementModel(
        "Gripe With Roslyn",
        "A series of Roslyn analyzers aimed at mitigating issues experienced during software development. Whilst its an opinionated project it is a good example of how you can use Roslyn Analysis to encourage conformance within development processes.",
        GetDhgmsOrgGithubProject("gripewithroslyn"),
        null);

    var qualityAssurancePackProject = new InvolvementModel(
        "Quality Assurance Pack",
        "A simple nuget package that references a series of nuget packages that can be used by a team to encourage conformance to development processes.",
        GetDhgmsOrgGithubProject("qualityassurancepack"),
        null);

    var netTestRegimentationProject = new InvolvementModel(
        "Net Test Regimentation",
        "A library built on top of XUnit to help produce re-usable test logic and a defined structure for the type of tests carried out on classes and methods.",
        GetDPVreonyOrgGithubProject("nettestregimentation"),
        null);
}
<main>
    <h1>Open Source</h1>
    <p>I'm the author of some small open source tools that are aimed at improving processes. I also contribute to the ReactiveUI project (primarily in Splat) to aid with the use of the MVVM pattern within the .NET ecosystem.</p>
    <div style="background-color: burlywood">
        <div class="container-fluid">
            <h2>ALM Projects, Research and Articles</h2>
            <div style="background-color: #98DDCA; margin-left: 10em; margin-right: 10em;">
                <h3>Requirements</h3>
                <div style="display: block">
                    <div style="display: inline-block; width: 20%; vertical-align: top; text-align: center">
                        ?
                    </div>
                    <div style="display: inline-block; width: 75%">
                        @await Html.PartialAsync(partialViewName, designingApmInSplatArticle)
                        @await Html.PartialAsync(partialViewName, designingNucleotideArticle)
                        @await Html.PartialAsync(partialViewName, designingVetuviemArticle)
                    </div>
                </div>
            </div>
            <div style="background-color: #D5ECC2; margin-left: 10em; margin-right: 10em;">
                <h3 style="display: block">Design Reasoning and Documentation</h3>
                <div style="display: block">
                    <div style="display: inline-block; width: 20%; vertical-align: top; text-align: center">
                        ?
                    </div>
                    <div style="display: inline-block; width: 75%">
                        @await Html.PartialAsync(partialViewName, usingStatiqAndMermaidArticle)
                        @await Html.PartialAsync(partialViewName, usingStatiqAndMermaidArticle)
                    </div>
                </div>
            </div>
            <div class="row" style="background-color: #FFD3B4; margin-left: 10em; margin-right: 10em;">
                <h3>Develop</h3>
                <div style="display: block">
                    <div style="display: inline-block; width: 20%; vertical-align: top; text-align: center">
                        ?
                    </div>
                    <div style="display: inline-block; width: 75%">
                        @await Html.PartialAsync(partialViewName, nucleotideProject)
                        @await Html.PartialAsync(partialViewName, whipstaffProject)
                        @await Html.PartialAsync(partialViewName, reactiveUiProject)
                        @await Html.PartialAsync(partialViewName, splatProject)
                        @await Html.PartialAsync(partialViewName, vetuviemProject)
                    </div>
                </div>
            </div>
            <div class="row" style="background-color: #FFAAA7; margin-left: 10em; margin-right: 10em;">
                <h3>Analyze</h3>
                <div style="display: block">
                    <div style="display: inline-block; width: 20%; vertical-align: top; text-align: center">
                        ?
                    </div>
                    <div style="display: inline-block; width: 75%">
                        @await Html.PartialAsync(partialViewName, gripeWithRoslynProject)
                        @await Html.PartialAsync(partialViewName, qualityAssurancePackProject)
                    </div>
                </div>
            </div>
            <div class="row" style="background-color: #beebe9; margin-left: 10em; margin-right: 10em;">
                <h3>Build</h3>
            </div>
            <div class="row" style="background-color: #f4dada; margin-left: 10em; margin-right: 10em;">
                <h3>Build Verification</h3>
                <div style="display: block">
                    <div style="display: inline-block; width: 20%; vertical-align: top; text-align: center">
                        ?
                    </div>
                    <div style="display: inline-block; width: 75%">
                        @await Html.PartialAsync(partialViewName, netTestRegimentationProject)
                    </div>
                </div>
            </div>
            <div class="row" style="background-color: #bdd2b6; margin-left: 10em; margin-right: 10em;">
                <h3>Package Artifacts</h3>
            </div>
            <div class="row" style="background-color: #a58faa; margin-left: 10em; margin-right: 10em;">
                <h3>Deploy</h3>
            </div>
            <div class="row" style="background-color: #f6eec7; margin-left: 10em; margin-right: 10em;">
                <h3>Deployment Verification</h3>
            </div>
        </div>
    </div>
    <h2>Other tools</h2>
    <div class="row mt-2">
        <div class="col-sm-6">
            <div class="card">
                <div class="card-header">
                    <h3>WSUS Smart Approve</h3>
                </div>
                <div class="card-body">
                    <p class="card-text">A tool for automating approvals of Windows Updates. It's aimed at avoiding unnecessary downloads and the ability to automate when approvals take place for different target groups.</p>
                    <a href="#" class="btn btn-primary">Github</a>
                </div>
            </div>
        </div>
    </div>

</main>
@functions
{
    public Uri GetDhgmsOrgGithubProject(string projectName)
    {
        return GetGithubProject("dhgms-solutions", projectName);
    }

    public Uri GetDPVreonyOrgGithubProject(string projectName)
    {
        return GetGithubProject("dpvreony", projectName);
    }

    public Uri GetReactiveUiOrgGithubProject(string projectName)
    {
        return GetGithubProject("reactiveui", projectName);
    }

    public Uri GetGithubProject(string organisationName, string projectName)
    {
        return new Uri($"https://www.github.com/{organisationName}/{projectName}");
    }
}

