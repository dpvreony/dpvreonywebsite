
name: Build website

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main, master ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ main, master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: true
      DOTNET_GENERATE_ASPNET_CERTIFICATE: false
      solutionpath: src\DPVreony.Website.sln
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/setup-dotnet@v1
      name: Setup Dot Net 
      
    - name: Checkout 
      uses: actions/checkout@v2

    - name: NPM package restore
      run: |
        pushd src\dpvreony.website\
        npm install
        popd

    - name: NPM outdated check
      run: |
        pushd src\dpvreony.website\
        npm outdated
        popd

    - name: Restore Packages
      run: |
        dotnet restore ${{ env.solutionpath }} /bl:artifacts\\binlog\\restore.binlog
        
    - name: Run Build
      run: |
        dotnet build ${{ env.solutionpath }} --configuration Release --no-restore /bl:artifacts\\binlog\\build.binlog /p:ContinuousIntegrationBuild=true 
        
    - name: Deploy Netlify
      if: contains(github.event.pull_request.labels.*.name, 'release') && github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
      run: |
        pushd src\dpvreony.website\
        dotnet run -c Release -- deploy
      env:
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        NETLIFY_DEPLOY_KEY: ${{ secrets.NETLIFY_DEPLOY_KEY }}      
